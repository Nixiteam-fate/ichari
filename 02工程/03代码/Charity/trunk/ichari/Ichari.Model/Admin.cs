//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using BaseRepository;

[assembly: EdmSchemaAttribute()]

namespace Ichari.Model.Admin
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class AdminEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“AdminEntities”部分中的连接字符串初始化新 AdminEntities 对象。
        /// </summary>
        public AdminEntities() : base("name=AdminEntities", "AdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AdminEntities 对象。
        /// </summary>
        public AdminEntities(string connectionString) : base(connectionString, "AdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AdminEntities 对象。
        /// </summary>
        public AdminEntities(EntityConnection connection) : base(connection, "AdminEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Actions> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Actions>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Actions> _Actions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RelRoleAction> RelRoleAction
        {
            get
            {
                if ((_RelRoleAction == null))
                {
                    _RelRoleAction = base.CreateObjectSet<RelRoleAction>("RelRoleAction");
                }
                return _RelRoleAction;
            }
        }
        private ObjectSet<RelRoleAction> _RelRoleAction;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RelUserRole> RelUserRole
        {
            get
            {
                if ((_RelUserRole == null))
                {
                    _RelUserRole = base.CreateObjectSet<RelUserRole>("RelUserRole");
                }
                return _RelUserRole;
            }
        }
        private ObjectSet<RelUserRole> _RelUserRole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SysRole> SysRole
        {
            get
            {
                if ((_SysRole == null))
                {
                    _SysRole = base.CreateObjectSet<SysRole>("SysRole");
                }
                return _SysRole;
            }
        }
        private ObjectSet<SysRole> _SysRole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SysUser> SysUser
        {
            get
            {
                if ((_SysUser == null))
                {
                    _SysUser = base.CreateObjectSet<SysUser>("SysUser");
                }
                return _SysUser;
            }
        }
        private ObjectSet<SysUser> _SysUser;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Actions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActions(Actions actions)
        {
            base.AddObject("Actions", actions);
        }
    
        /// <summary>
        /// 用于向 RelRoleAction EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRelRoleAction(RelRoleAction relRoleAction)
        {
            base.AddObject("RelRoleAction", relRoleAction);
        }
    
        /// <summary>
        /// 用于向 RelUserRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRelUserRole(RelUserRole relUserRole)
        {
            base.AddObject("RelUserRole", relUserRole);
        }
    
        /// <summary>
        /// 用于向 SysRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSysRole(SysRole sysRole)
        {
            base.AddObject("SysRole", sysRole);
        }
    
        /// <summary>
        /// 用于向 SysUser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSysUser(SysUser sysUser)
        {
            base.AddObject("SysUser", sysUser);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ichari.Model", Name="Actions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actions : BaseEntity //EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Actions 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="menuName">MenuName 属性的初始值。</param>
        /// <param name="isMenu">IsMenu 属性的初始值。</param>
        /// <param name="isAjax">IsAjax 属性的初始值。</param>
        /// <param name="isNeedAuth">IsNeedAuth 属性的初始值。</param>
        public static Actions CreateActions(global::System.Int32 id, global::System.String menuName, global::System.Boolean isMenu, global::System.Boolean isAjax, global::System.Boolean isNeedAuth)
        {
            Actions actions = new Actions();
            actions.ID = id;
            actions.MenuName = menuName;
            actions.IsMenu = isMenu;
            actions.IsAjax = isAjax;
            actions.IsNeedAuth = isNeedAuth;
            return actions;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MenuCode
        {
            get
            {
                return _MenuCode;
            }
            set
            {
                OnMenuCodeChanging(value);
                ReportPropertyChanging("MenuCode");
                _MenuCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MenuCode");
                OnMenuCodeChanged();
            }
        }
        private global::System.String _MenuCode;
        partial void OnMenuCodeChanging(global::System.String value);
        partial void OnMenuCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuName
        {
            get
            {
                return _MenuName;
            }
            set
            {
                OnMenuNameChanging(value);
                ReportPropertyChanging("MenuName");
                _MenuName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MenuName");
                OnMenuNameChanged();
            }
        }
        private global::System.String _MenuName;
        partial void OnMenuNameChanging(global::System.String value);
        partial void OnMenuNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMenu
        {
            get
            {
                return _IsMenu;
            }
            set
            {
                OnIsMenuChanging(value);
                ReportPropertyChanging("IsMenu");
                _IsMenu = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMenu");
                OnIsMenuChanged();
            }
        }
        private global::System.Boolean _IsMenu;
        partial void OnIsMenuChanging(global::System.Boolean value);
        partial void OnIsMenuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAjax
        {
            get
            {
                return _IsAjax;
            }
            set
            {
                OnIsAjaxChanging(value);
                ReportPropertyChanging("IsAjax");
                _IsAjax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAjax");
                OnIsAjaxChanged();
            }
        }
        private global::System.Boolean _IsAjax;
        partial void OnIsAjaxChanging(global::System.Boolean value);
        partial void OnIsAjaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResourceKey
        {
            get
            {
                return _ResourceKey;
            }
            set
            {
                OnResourceKeyChanging(value);
                ReportPropertyChanging("ResourceKey");
                _ResourceKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResourceKey");
                OnResourceKeyChanged();
            }
        }
        private global::System.String _ResourceKey;
        partial void OnResourceKeyChanging(global::System.String value);
        partial void OnResourceKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNeedAuth
        {
            get
            {
                return _IsNeedAuth;
            }
            set
            {
                OnIsNeedAuthChanging(value);
                ReportPropertyChanging("IsNeedAuth");
                _IsNeedAuth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNeedAuth");
                OnIsNeedAuthChanged();
            }
        }
        private global::System.Boolean _IsNeedAuth;
        partial void OnIsNeedAuthChanging(global::System.Boolean value);
        partial void OnIsNeedAuthChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortNumber
        {
            get
            {
                return _SortNumber;
            }
            set
            {
                OnSortNumberChanging(value);
                ReportPropertyChanging("SortNumber");
                _SortNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortNumber");
                OnSortNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SortNumber;
        partial void OnSortNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSortNumberChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ichari.Model", Name="RelRoleAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelRoleAction : BaseEntity //EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RelRoleAction 对象。
        /// </summary>
        /// <param name="roleId">RoleId 属性的初始值。</param>
        /// <param name="actionId">ActionId 属性的初始值。</param>
        public static RelRoleAction CreateRelRoleAction(global::System.Int32 roleId, global::System.Int32 actionId)
        {
            RelRoleAction relRoleAction = new RelRoleAction();
            relRoleAction.RoleId = roleId;
            relRoleAction.ActionId = actionId;
            return relRoleAction;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionId
        {
            get
            {
                return _ActionId;
            }
            set
            {
                if (_ActionId != value)
                {
                    OnActionIdChanging(value);
                    ReportPropertyChanging("ActionId");
                    _ActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionId");
                    OnActionIdChanged();
                }
            }
        }
        private global::System.Int32 _ActionId;
        partial void OnActionIdChanging(global::System.Int32 value);
        partial void OnActionIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ichari.Model", Name="RelUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelUserRole : BaseEntity //EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RelUserRole 对象。
        /// </summary>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="roleId">RoleId 属性的初始值。</param>
        public static RelUserRole CreateRelUserRole(global::System.Int32 userId, global::System.Int32 roleId)
        {
            RelUserRole relUserRole = new RelUserRole();
            relUserRole.UserId = userId;
            relUserRole.RoleId = roleId;
            return relUserRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ichari.Model", Name="SysRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysRole : BaseEntity //EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SysRole 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        public static SysRole CreateSysRole(global::System.Int32 id, global::System.String roleName)
        {
            SysRole sysRole = new SysRole();
            sysRole.Id = id;
            sysRole.RoleName = roleName;
            return sysRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ichari.Model", Name="SysUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysUser : BaseEntity //EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SysUser 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="logonName">LogonName 属性的初始值。</param>
        /// <param name="trueName">TrueName 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        public static SysUser CreateSysUser(global::System.Int32 id, global::System.String logonName, global::System.String trueName, global::System.String password)
        {
            SysUser sysUser = new SysUser();
            sysUser.Id = id;
            sysUser.LogonName = logonName;
            sysUser.TrueName = trueName;
            sysUser.Password = password;
            return sysUser;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LogonName
        {
            get
            {
                return _LogonName;
            }
            set
            {
                OnLogonNameChanging(value);
                ReportPropertyChanging("LogonName");
                _LogonName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LogonName");
                OnLogonNameChanged();
            }
        }
        private global::System.String _LogonName;
        partial void OnLogonNameChanging(global::System.String value);
        partial void OnLogonNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TrueName
        {
            get
            {
                return _TrueName;
            }
            set
            {
                OnTrueNameChanging(value);
                ReportPropertyChanging("TrueName");
                _TrueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TrueName");
                OnTrueNameChanged();
            }
        }
        private global::System.String _TrueName;
        partial void OnTrueNameChanging(global::System.String value);
        partial void OnTrueNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
    }

    #endregion
    
}
