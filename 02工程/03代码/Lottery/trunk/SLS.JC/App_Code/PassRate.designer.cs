#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4952
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="SLS_JC")]
public partial class PassRateDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertT_PassRate(T_PassRate instance);
  partial void UpdateT_PassRate(T_PassRate instance);
  partial void DeleteT_PassRate(T_PassRate instance);
  #endregion
	
	public PassRateDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SLS_JCConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public PassRateDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PassRateDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PassRateDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PassRateDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<T_PassRate> T_PassRate
	{
		get
		{
			return this.GetTable<T_PassRate>();
		}
	}
}

[Table(Name="dbo.T_PassRate")]
public partial class T_PassRate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Day;
	
	private string _MatchNumber;
	
	private string _Game;
	
	private string _MainTeam;
	
	private string _GuestTeam;
	
	private System.Nullable<long> _MatchID;
	
	private System.Nullable<double> _Win;
	
	private string _WinDirection;
	
	private System.Nullable<double> _Flat;
	
	private string _FlatDirection;
	
	private System.Nullable<double> _Lose;
	
	private string _LoseDirection;
	
	private System.Nullable<double> _S10;
	
	private string _S10Direction;
	
	private System.Nullable<double> _S20;
	
	private string _S20Direction;
	
	private System.Nullable<double> _S21;
	
	private string _S21Direction;
	
	private System.Nullable<double> _S30;
	
	private string _S30Direction;
	
	private System.Nullable<double> _S31;
	
	private string _S31Direction;
	
	private System.Nullable<double> _S32;
	
	private string _S32Direction;
	
	private System.Nullable<double> _S40;
	
	private string _S40Direction;
	
	private System.Nullable<double> _S41;
	
	private string _S41Direction;
	
	private System.Nullable<double> _S42;
	
	private string _S42Direction;
	
	private System.Nullable<double> _S50;
	
	private string _S50Direction;
	
	private System.Nullable<double> _S51;
	
	private string _S51Direction;
	
	private System.Nullable<double> _S52;
	
	private string _S52Direction;
	
	private System.Nullable<double> _Sother;
	
	private string _SotherDirection;
	
	private System.Nullable<double> _P00;
	
	private string _P00Direction;
	
	private System.Nullable<double> _P11;
	
	private string _P11Direction;
	
	private System.Nullable<double> _P22;
	
	private string _P22Direction;
	
	private System.Nullable<double> _P33;
	
	private string _P33Direction;
	
	private System.Nullable<double> _Pother;
	
	private string _PotherDirection;
	
	private System.Nullable<double> _F01;
	
	private string _F01Direction;
	
	private System.Nullable<double> _F02;
	
	private string _F02Direction;
	
	private System.Nullable<double> _F12;
	
	private string _F12Direction;
	
	private System.Nullable<double> _F03;
	
	private string _F03Direction;
	
	private System.Nullable<double> _F13;
	
	private string _F13Direction;
	
	private System.Nullable<double> _F23;
	
	private string _F23Direction;
	
	private System.Nullable<double> _F04;
	
	private string _F04Direction;
	
	private System.Nullable<double> _F14;
	
	private string _F14Direction;
	
	private System.Nullable<double> _F24;
	
	private string _F24Direction;
	
	private System.Nullable<double> _F05;
	
	private string _F05Direction;
	
	private System.Nullable<double> _F15;
	
	private string _F15Direction;
	
	private System.Nullable<double> _F25;
	
	private string _F25Direction;
	
	private System.Nullable<double> _Fother;
	
	private string _FotherDirection;
	
	private System.Nullable<double> _In0;
	
	private string _In0Direction;
	
	private System.Nullable<double> _In1;
	
	private string _In1Direction;
	
	private System.Nullable<double> _In2;
	
	private string _In2Direction;
	
	private System.Nullable<double> _In3;
	
	private string _In3Direction;
	
	private System.Nullable<double> _In4;
	
	private string _In4Direction;
	
	private System.Nullable<double> _In5;
	
	private string _In5Direction;
	
	private System.Nullable<double> _In6;
	
	private string _In6Direction;
	
	private System.Nullable<double> _In7;
	
	private string _In7Direction;
	
	private System.Nullable<double> _SS;
	
	private string _SSDirection;
	
	private System.Nullable<double> _SP;
	
	private string _SPDirection;
	
	private System.Nullable<double> _SF;
	
	private string _SFDirection;
	
	private System.Nullable<double> _PS;
	
	private string _PSDirection;
	
	private System.Nullable<double> _PP;
	
	private string _PPDirection;
	
	private System.Nullable<double> _PF;
	
	private string _PFDirection;
	
	private System.Nullable<double> _FS;
	
	private string _FSDirection;
	
	private System.Nullable<double> _FP;
	
	private string _FPDirection;
	
	private System.Nullable<double> _FF;
	
	private string _FFDirection;
	
	private System.Nullable<int> _MainLoseball;
	
	private System.Nullable<System.DateTime> _StopSellTime;
	
	private string _EuropeSSP;
	
	private string _EuropePSP;
	
	private string _EuropeFSP;
	
	private System.Nullable<long> _InforMationID;
	
	private System.Nullable<long> _InforMationMainTeamID;
	
	private System.Nullable<long> _InforMationGuestTeamID;
	
	private System.Nullable<long> _InforMationMatchTypeID;
	
	private string _GameColor;
	
	private System.Nullable<int> _SNumberCount;
	
	private System.Nullable<int> _PNumberCount;
	
	private System.Nullable<int> _FNumberCount;
	
	private System.Nullable<bool> _IsHhad;
	
	private System.Nullable<bool> _IsCrs;
	
	private System.Nullable<bool> _IsTtg;
	
	private System.Nullable<bool> _IsHafu;
	
	private System.Nullable<bool> _State;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDayChanging(string value);
    partial void OnDayChanged();
    partial void OnMatchNumberChanging(string value);
    partial void OnMatchNumberChanged();
    partial void OnGameChanging(string value);
    partial void OnGameChanged();
    partial void OnMainTeamChanging(string value);
    partial void OnMainTeamChanged();
    partial void OnGuestTeamChanging(string value);
    partial void OnGuestTeamChanged();
    partial void OnMatchIDChanging(System.Nullable<long> value);
    partial void OnMatchIDChanged();
    partial void OnWinChanging(System.Nullable<double> value);
    partial void OnWinChanged();
    partial void OnWinDirectionChanging(string value);
    partial void OnWinDirectionChanged();
    partial void OnFlatChanging(System.Nullable<double> value);
    partial void OnFlatChanged();
    partial void OnFlatDirectionChanging(string value);
    partial void OnFlatDirectionChanged();
    partial void OnLoseChanging(System.Nullable<double> value);
    partial void OnLoseChanged();
    partial void OnLoseDirectionChanging(string value);
    partial void OnLoseDirectionChanged();
    partial void OnS10Changing(System.Nullable<double> value);
    partial void OnS10Changed();
    partial void OnS10DirectionChanging(string value);
    partial void OnS10DirectionChanged();
    partial void OnS20Changing(System.Nullable<double> value);
    partial void OnS20Changed();
    partial void OnS20DirectionChanging(string value);
    partial void OnS20DirectionChanged();
    partial void OnS21Changing(System.Nullable<double> value);
    partial void OnS21Changed();
    partial void OnS21DirectionChanging(string value);
    partial void OnS21DirectionChanged();
    partial void OnS30Changing(System.Nullable<double> value);
    partial void OnS30Changed();
    partial void OnS30DirectionChanging(string value);
    partial void OnS30DirectionChanged();
    partial void OnS31Changing(System.Nullable<double> value);
    partial void OnS31Changed();
    partial void OnS31DirectionChanging(string value);
    partial void OnS31DirectionChanged();
    partial void OnS32Changing(System.Nullable<double> value);
    partial void OnS32Changed();
    partial void OnS32DirectionChanging(string value);
    partial void OnS32DirectionChanged();
    partial void OnS40Changing(System.Nullable<double> value);
    partial void OnS40Changed();
    partial void OnS40DirectionChanging(string value);
    partial void OnS40DirectionChanged();
    partial void OnS41Changing(System.Nullable<double> value);
    partial void OnS41Changed();
    partial void OnS41DirectionChanging(string value);
    partial void OnS41DirectionChanged();
    partial void OnS42Changing(System.Nullable<double> value);
    partial void OnS42Changed();
    partial void OnS42DirectionChanging(string value);
    partial void OnS42DirectionChanged();
    partial void OnS50Changing(System.Nullable<double> value);
    partial void OnS50Changed();
    partial void OnS50DirectionChanging(string value);
    partial void OnS50DirectionChanged();
    partial void OnS51Changing(System.Nullable<double> value);
    partial void OnS51Changed();
    partial void OnS51DirectionChanging(string value);
    partial void OnS51DirectionChanged();
    partial void OnS52Changing(System.Nullable<double> value);
    partial void OnS52Changed();
    partial void OnS52DirectionChanging(string value);
    partial void OnS52DirectionChanged();
    partial void OnSotherChanging(System.Nullable<double> value);
    partial void OnSotherChanged();
    partial void OnSotherDirectionChanging(string value);
    partial void OnSotherDirectionChanged();
    partial void OnP00Changing(System.Nullable<double> value);
    partial void OnP00Changed();
    partial void OnP00DirectionChanging(string value);
    partial void OnP00DirectionChanged();
    partial void OnP11Changing(System.Nullable<double> value);
    partial void OnP11Changed();
    partial void OnP11DirectionChanging(string value);
    partial void OnP11DirectionChanged();
    partial void OnP22Changing(System.Nullable<double> value);
    partial void OnP22Changed();
    partial void OnP22DirectionChanging(string value);
    partial void OnP22DirectionChanged();
    partial void OnP33Changing(System.Nullable<double> value);
    partial void OnP33Changed();
    partial void OnP33DirectionChanging(string value);
    partial void OnP33DirectionChanged();
    partial void OnPotherChanging(System.Nullable<double> value);
    partial void OnPotherChanged();
    partial void OnPotherDirectionChanging(string value);
    partial void OnPotherDirectionChanged();
    partial void OnF01Changing(System.Nullable<double> value);
    partial void OnF01Changed();
    partial void OnF01DirectionChanging(string value);
    partial void OnF01DirectionChanged();
    partial void OnF02Changing(System.Nullable<double> value);
    partial void OnF02Changed();
    partial void OnF02DirectionChanging(string value);
    partial void OnF02DirectionChanged();
    partial void OnF12Changing(System.Nullable<double> value);
    partial void OnF12Changed();
    partial void OnF12DirectionChanging(string value);
    partial void OnF12DirectionChanged();
    partial void OnF03Changing(System.Nullable<double> value);
    partial void OnF03Changed();
    partial void OnF03DirectionChanging(string value);
    partial void OnF03DirectionChanged();
    partial void OnF13Changing(System.Nullable<double> value);
    partial void OnF13Changed();
    partial void OnF13DirectionChanging(string value);
    partial void OnF13DirectionChanged();
    partial void OnF23Changing(System.Nullable<double> value);
    partial void OnF23Changed();
    partial void OnF23DirectionChanging(string value);
    partial void OnF23DirectionChanged();
    partial void OnF04Changing(System.Nullable<double> value);
    partial void OnF04Changed();
    partial void OnF04DirectionChanging(string value);
    partial void OnF04DirectionChanged();
    partial void OnF14Changing(System.Nullable<double> value);
    partial void OnF14Changed();
    partial void OnF14DirectionChanging(string value);
    partial void OnF14DirectionChanged();
    partial void OnF24Changing(System.Nullable<double> value);
    partial void OnF24Changed();
    partial void OnF24DirectionChanging(string value);
    partial void OnF24DirectionChanged();
    partial void OnF05Changing(System.Nullable<double> value);
    partial void OnF05Changed();
    partial void OnF05DirectionChanging(string value);
    partial void OnF05DirectionChanged();
    partial void OnF15Changing(System.Nullable<double> value);
    partial void OnF15Changed();
    partial void OnF15DirectionChanging(string value);
    partial void OnF15DirectionChanged();
    partial void OnF25Changing(System.Nullable<double> value);
    partial void OnF25Changed();
    partial void OnF25DirectionChanging(string value);
    partial void OnF25DirectionChanged();
    partial void OnFotherChanging(System.Nullable<double> value);
    partial void OnFotherChanged();
    partial void OnFotherDirectionChanging(string value);
    partial void OnFotherDirectionChanged();
    partial void OnIn0Changing(System.Nullable<double> value);
    partial void OnIn0Changed();
    partial void OnIn0DirectionChanging(string value);
    partial void OnIn0DirectionChanged();
    partial void OnIn1Changing(System.Nullable<double> value);
    partial void OnIn1Changed();
    partial void OnIn1DirectionChanging(string value);
    partial void OnIn1DirectionChanged();
    partial void OnIn2Changing(System.Nullable<double> value);
    partial void OnIn2Changed();
    partial void OnIn2DirectionChanging(string value);
    partial void OnIn2DirectionChanged();
    partial void OnIn3Changing(System.Nullable<double> value);
    partial void OnIn3Changed();
    partial void OnIn3DirectionChanging(string value);
    partial void OnIn3DirectionChanged();
    partial void OnIn4Changing(System.Nullable<double> value);
    partial void OnIn4Changed();
    partial void OnIn4DirectionChanging(string value);
    partial void OnIn4DirectionChanged();
    partial void OnIn5Changing(System.Nullable<double> value);
    partial void OnIn5Changed();
    partial void OnIn5DirectionChanging(string value);
    partial void OnIn5DirectionChanged();
    partial void OnIn6Changing(System.Nullable<double> value);
    partial void OnIn6Changed();
    partial void OnIn6DirectionChanging(string value);
    partial void OnIn6DirectionChanged();
    partial void OnIn7Changing(System.Nullable<double> value);
    partial void OnIn7Changed();
    partial void OnIn7DirectionChanging(string value);
    partial void OnIn7DirectionChanged();
    partial void OnSSChanging(System.Nullable<double> value);
    partial void OnSSChanged();
    partial void OnSSDirectionChanging(string value);
    partial void OnSSDirectionChanged();
    partial void OnSPChanging(System.Nullable<double> value);
    partial void OnSPChanged();
    partial void OnSPDirectionChanging(string value);
    partial void OnSPDirectionChanged();
    partial void OnSFChanging(System.Nullable<double> value);
    partial void OnSFChanged();
    partial void OnSFDirectionChanging(string value);
    partial void OnSFDirectionChanged();
    partial void OnPSChanging(System.Nullable<double> value);
    partial void OnPSChanged();
    partial void OnPSDirectionChanging(string value);
    partial void OnPSDirectionChanged();
    partial void OnPPChanging(System.Nullable<double> value);
    partial void OnPPChanged();
    partial void OnPPDirectionChanging(string value);
    partial void OnPPDirectionChanged();
    partial void OnPFChanging(System.Nullable<double> value);
    partial void OnPFChanged();
    partial void OnPFDirectionChanging(string value);
    partial void OnPFDirectionChanged();
    partial void OnFSChanging(System.Nullable<double> value);
    partial void OnFSChanged();
    partial void OnFSDirectionChanging(string value);
    partial void OnFSDirectionChanged();
    partial void OnFPChanging(System.Nullable<double> value);
    partial void OnFPChanged();
    partial void OnFPDirectionChanging(string value);
    partial void OnFPDirectionChanged();
    partial void OnFFChanging(System.Nullable<double> value);
    partial void OnFFChanged();
    partial void OnFFDirectionChanging(string value);
    partial void OnFFDirectionChanged();
    partial void OnMainLoseballChanging(System.Nullable<int> value);
    partial void OnMainLoseballChanged();
    partial void OnStopSellTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStopSellTimeChanged();
    partial void OnEuropeSSPChanging(string value);
    partial void OnEuropeSSPChanged();
    partial void OnEuropePSPChanging(string value);
    partial void OnEuropePSPChanged();
    partial void OnEuropeFSPChanging(string value);
    partial void OnEuropeFSPChanged();
    partial void OnInforMationIDChanging(System.Nullable<long> value);
    partial void OnInforMationIDChanged();
    partial void OnInforMationMainTeamIDChanging(System.Nullable<long> value);
    partial void OnInforMationMainTeamIDChanged();
    partial void OnInforMationGuestTeamIDChanging(System.Nullable<long> value);
    partial void OnInforMationGuestTeamIDChanged();
    partial void OnInforMationMatchTypeIDChanging(System.Nullable<long> value);
    partial void OnInforMationMatchTypeIDChanged();
    partial void OnGameColorChanging(string value);
    partial void OnGameColorChanged();
    partial void OnSNumberCountChanging(System.Nullable<int> value);
    partial void OnSNumberCountChanged();
    partial void OnPNumberCountChanging(System.Nullable<int> value);
    partial void OnPNumberCountChanged();
    partial void OnFNumberCountChanging(System.Nullable<int> value);
    partial void OnFNumberCountChanged();
    partial void OnIsHhadChanging(System.Nullable<bool> value);
    partial void OnIsHhadChanged();
    partial void OnIsCrsChanging(System.Nullable<bool> value);
    partial void OnIsCrsChanged();
    partial void OnIsTtgChanging(System.Nullable<bool> value);
    partial void OnIsTtgChanged();
    partial void OnIsHafuChanging(System.Nullable<bool> value);
    partial void OnIsHafuChanged();
    partial void OnStateChanging(System.Nullable<bool> value);
    partial void OnStateChanged();
    #endregion
	
	public T_PassRate()
	{
		OnCreated();
	}
	
	[Column(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[Column(Storage="_Day", DbType="VarChar(50)")]
	public string Day
	{
		get
		{
			return this._Day;
		}
		set
		{
			if ((this._Day != value))
			{
				this.OnDayChanging(value);
				this.SendPropertyChanging();
				this._Day = value;
				this.SendPropertyChanged("Day");
				this.OnDayChanged();
			}
		}
	}
	
	[Column(Storage="_MatchNumber", DbType="VarChar(20)")]
	public string MatchNumber
	{
		get
		{
			return this._MatchNumber;
		}
		set
		{
			if ((this._MatchNumber != value))
			{
				this.OnMatchNumberChanging(value);
				this.SendPropertyChanging();
				this._MatchNumber = value;
				this.SendPropertyChanged("MatchNumber");
				this.OnMatchNumberChanged();
			}
		}
	}
	
	[Column(Storage="_Game", DbType="VarChar(50)")]
	public string Game
	{
		get
		{
			return this._Game;
		}
		set
		{
			if ((this._Game != value))
			{
				this.OnGameChanging(value);
				this.SendPropertyChanging();
				this._Game = value;
				this.SendPropertyChanged("Game");
				this.OnGameChanged();
			}
		}
	}
	
	[Column(Storage="_MainTeam", DbType="VarChar(50)")]
	public string MainTeam
	{
		get
		{
			return this._MainTeam;
		}
		set
		{
			if ((this._MainTeam != value))
			{
				this.OnMainTeamChanging(value);
				this.SendPropertyChanging();
				this._MainTeam = value;
				this.SendPropertyChanged("MainTeam");
				this.OnMainTeamChanged();
			}
		}
	}
	
	[Column(Storage="_GuestTeam", DbType="VarChar(50)")]
	public string GuestTeam
	{
		get
		{
			return this._GuestTeam;
		}
		set
		{
			if ((this._GuestTeam != value))
			{
				this.OnGuestTeamChanging(value);
				this.SendPropertyChanging();
				this._GuestTeam = value;
				this.SendPropertyChanged("GuestTeam");
				this.OnGuestTeamChanged();
			}
		}
	}
	
	[Column(Storage="_MatchID", DbType="BigInt")]
	public System.Nullable<long> MatchID
	{
		get
		{
			return this._MatchID;
		}
		set
		{
			if ((this._MatchID != value))
			{
				this.OnMatchIDChanging(value);
				this.SendPropertyChanging();
				this._MatchID = value;
				this.SendPropertyChanged("MatchID");
				this.OnMatchIDChanged();
			}
		}
	}
	
	[Column(Storage="_Win", DbType="Float")]
	public System.Nullable<double> Win
	{
		get
		{
			return this._Win;
		}
		set
		{
			if ((this._Win != value))
			{
				this.OnWinChanging(value);
				this.SendPropertyChanging();
				this._Win = value;
				this.SendPropertyChanged("Win");
				this.OnWinChanged();
			}
		}
	}
	
	[Column(Storage="_WinDirection", DbType="VarChar(10)")]
	public string WinDirection
	{
		get
		{
			return this._WinDirection;
		}
		set
		{
			if ((this._WinDirection != value))
			{
				this.OnWinDirectionChanging(value);
				this.SendPropertyChanging();
				this._WinDirection = value;
				this.SendPropertyChanged("WinDirection");
				this.OnWinDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_Flat", DbType="Float")]
	public System.Nullable<double> Flat
	{
		get
		{
			return this._Flat;
		}
		set
		{
			if ((this._Flat != value))
			{
				this.OnFlatChanging(value);
				this.SendPropertyChanging();
				this._Flat = value;
				this.SendPropertyChanged("Flat");
				this.OnFlatChanged();
			}
		}
	}
	
	[Column(Storage="_FlatDirection", DbType="VarChar(10)")]
	public string FlatDirection
	{
		get
		{
			return this._FlatDirection;
		}
		set
		{
			if ((this._FlatDirection != value))
			{
				this.OnFlatDirectionChanging(value);
				this.SendPropertyChanging();
				this._FlatDirection = value;
				this.SendPropertyChanged("FlatDirection");
				this.OnFlatDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_Lose", DbType="Float")]
	public System.Nullable<double> Lose
	{
		get
		{
			return this._Lose;
		}
		set
		{
			if ((this._Lose != value))
			{
				this.OnLoseChanging(value);
				this.SendPropertyChanging();
				this._Lose = value;
				this.SendPropertyChanged("Lose");
				this.OnLoseChanged();
			}
		}
	}
	
	[Column(Storage="_LoseDirection", DbType="VarChar(10)")]
	public string LoseDirection
	{
		get
		{
			return this._LoseDirection;
		}
		set
		{
			if ((this._LoseDirection != value))
			{
				this.OnLoseDirectionChanging(value);
				this.SendPropertyChanging();
				this._LoseDirection = value;
				this.SendPropertyChanged("LoseDirection");
				this.OnLoseDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S10", DbType="Float")]
	public System.Nullable<double> S10
	{
		get
		{
			return this._S10;
		}
		set
		{
			if ((this._S10 != value))
			{
				this.OnS10Changing(value);
				this.SendPropertyChanging();
				this._S10 = value;
				this.SendPropertyChanged("S10");
				this.OnS10Changed();
			}
		}
	}
	
	[Column(Storage="_S10Direction", DbType="VarChar(10)")]
	public string S10Direction
	{
		get
		{
			return this._S10Direction;
		}
		set
		{
			if ((this._S10Direction != value))
			{
				this.OnS10DirectionChanging(value);
				this.SendPropertyChanging();
				this._S10Direction = value;
				this.SendPropertyChanged("S10Direction");
				this.OnS10DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S20", DbType="Float")]
	public System.Nullable<double> S20
	{
		get
		{
			return this._S20;
		}
		set
		{
			if ((this._S20 != value))
			{
				this.OnS20Changing(value);
				this.SendPropertyChanging();
				this._S20 = value;
				this.SendPropertyChanged("S20");
				this.OnS20Changed();
			}
		}
	}
	
	[Column(Storage="_S20Direction", DbType="VarChar(10)")]
	public string S20Direction
	{
		get
		{
			return this._S20Direction;
		}
		set
		{
			if ((this._S20Direction != value))
			{
				this.OnS20DirectionChanging(value);
				this.SendPropertyChanging();
				this._S20Direction = value;
				this.SendPropertyChanged("S20Direction");
				this.OnS20DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S21", DbType="Float")]
	public System.Nullable<double> S21
	{
		get
		{
			return this._S21;
		}
		set
		{
			if ((this._S21 != value))
			{
				this.OnS21Changing(value);
				this.SendPropertyChanging();
				this._S21 = value;
				this.SendPropertyChanged("S21");
				this.OnS21Changed();
			}
		}
	}
	
	[Column(Storage="_S21Direction", DbType="VarChar(10)")]
	public string S21Direction
	{
		get
		{
			return this._S21Direction;
		}
		set
		{
			if ((this._S21Direction != value))
			{
				this.OnS21DirectionChanging(value);
				this.SendPropertyChanging();
				this._S21Direction = value;
				this.SendPropertyChanged("S21Direction");
				this.OnS21DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S30", DbType="Float")]
	public System.Nullable<double> S30
	{
		get
		{
			return this._S30;
		}
		set
		{
			if ((this._S30 != value))
			{
				this.OnS30Changing(value);
				this.SendPropertyChanging();
				this._S30 = value;
				this.SendPropertyChanged("S30");
				this.OnS30Changed();
			}
		}
	}
	
	[Column(Storage="_S30Direction", DbType="VarChar(10)")]
	public string S30Direction
	{
		get
		{
			return this._S30Direction;
		}
		set
		{
			if ((this._S30Direction != value))
			{
				this.OnS30DirectionChanging(value);
				this.SendPropertyChanging();
				this._S30Direction = value;
				this.SendPropertyChanged("S30Direction");
				this.OnS30DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S31", DbType="Float")]
	public System.Nullable<double> S31
	{
		get
		{
			return this._S31;
		}
		set
		{
			if ((this._S31 != value))
			{
				this.OnS31Changing(value);
				this.SendPropertyChanging();
				this._S31 = value;
				this.SendPropertyChanged("S31");
				this.OnS31Changed();
			}
		}
	}
	
	[Column(Storage="_S31Direction", DbType="VarChar(10)")]
	public string S31Direction
	{
		get
		{
			return this._S31Direction;
		}
		set
		{
			if ((this._S31Direction != value))
			{
				this.OnS31DirectionChanging(value);
				this.SendPropertyChanging();
				this._S31Direction = value;
				this.SendPropertyChanged("S31Direction");
				this.OnS31DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S32", DbType="Float")]
	public System.Nullable<double> S32
	{
		get
		{
			return this._S32;
		}
		set
		{
			if ((this._S32 != value))
			{
				this.OnS32Changing(value);
				this.SendPropertyChanging();
				this._S32 = value;
				this.SendPropertyChanged("S32");
				this.OnS32Changed();
			}
		}
	}
	
	[Column(Storage="_S32Direction", DbType="VarChar(10)")]
	public string S32Direction
	{
		get
		{
			return this._S32Direction;
		}
		set
		{
			if ((this._S32Direction != value))
			{
				this.OnS32DirectionChanging(value);
				this.SendPropertyChanging();
				this._S32Direction = value;
				this.SendPropertyChanged("S32Direction");
				this.OnS32DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S40", DbType="Float")]
	public System.Nullable<double> S40
	{
		get
		{
			return this._S40;
		}
		set
		{
			if ((this._S40 != value))
			{
				this.OnS40Changing(value);
				this.SendPropertyChanging();
				this._S40 = value;
				this.SendPropertyChanged("S40");
				this.OnS40Changed();
			}
		}
	}
	
	[Column(Storage="_S40Direction", DbType="VarChar(10)")]
	public string S40Direction
	{
		get
		{
			return this._S40Direction;
		}
		set
		{
			if ((this._S40Direction != value))
			{
				this.OnS40DirectionChanging(value);
				this.SendPropertyChanging();
				this._S40Direction = value;
				this.SendPropertyChanged("S40Direction");
				this.OnS40DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S41", DbType="Float")]
	public System.Nullable<double> S41
	{
		get
		{
			return this._S41;
		}
		set
		{
			if ((this._S41 != value))
			{
				this.OnS41Changing(value);
				this.SendPropertyChanging();
				this._S41 = value;
				this.SendPropertyChanged("S41");
				this.OnS41Changed();
			}
		}
	}
	
	[Column(Storage="_S41Direction", DbType="VarChar(10)")]
	public string S41Direction
	{
		get
		{
			return this._S41Direction;
		}
		set
		{
			if ((this._S41Direction != value))
			{
				this.OnS41DirectionChanging(value);
				this.SendPropertyChanging();
				this._S41Direction = value;
				this.SendPropertyChanged("S41Direction");
				this.OnS41DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S42", DbType="Float")]
	public System.Nullable<double> S42
	{
		get
		{
			return this._S42;
		}
		set
		{
			if ((this._S42 != value))
			{
				this.OnS42Changing(value);
				this.SendPropertyChanging();
				this._S42 = value;
				this.SendPropertyChanged("S42");
				this.OnS42Changed();
			}
		}
	}
	
	[Column(Storage="_S42Direction", DbType="VarChar(50)")]
	public string S42Direction
	{
		get
		{
			return this._S42Direction;
		}
		set
		{
			if ((this._S42Direction != value))
			{
				this.OnS42DirectionChanging(value);
				this.SendPropertyChanging();
				this._S42Direction = value;
				this.SendPropertyChanged("S42Direction");
				this.OnS42DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S50", DbType="Float")]
	public System.Nullable<double> S50
	{
		get
		{
			return this._S50;
		}
		set
		{
			if ((this._S50 != value))
			{
				this.OnS50Changing(value);
				this.SendPropertyChanging();
				this._S50 = value;
				this.SendPropertyChanged("S50");
				this.OnS50Changed();
			}
		}
	}
	
	[Column(Storage="_S50Direction", DbType="VarChar(50)")]
	public string S50Direction
	{
		get
		{
			return this._S50Direction;
		}
		set
		{
			if ((this._S50Direction != value))
			{
				this.OnS50DirectionChanging(value);
				this.SendPropertyChanging();
				this._S50Direction = value;
				this.SendPropertyChanged("S50Direction");
				this.OnS50DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S51", DbType="Float")]
	public System.Nullable<double> S51
	{
		get
		{
			return this._S51;
		}
		set
		{
			if ((this._S51 != value))
			{
				this.OnS51Changing(value);
				this.SendPropertyChanging();
				this._S51 = value;
				this.SendPropertyChanged("S51");
				this.OnS51Changed();
			}
		}
	}
	
	[Column(Storage="_S51Direction", DbType="VarChar(50)")]
	public string S51Direction
	{
		get
		{
			return this._S51Direction;
		}
		set
		{
			if ((this._S51Direction != value))
			{
				this.OnS51DirectionChanging(value);
				this.SendPropertyChanging();
				this._S51Direction = value;
				this.SendPropertyChanged("S51Direction");
				this.OnS51DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_S52", DbType="Float")]
	public System.Nullable<double> S52
	{
		get
		{
			return this._S52;
		}
		set
		{
			if ((this._S52 != value))
			{
				this.OnS52Changing(value);
				this.SendPropertyChanging();
				this._S52 = value;
				this.SendPropertyChanged("S52");
				this.OnS52Changed();
			}
		}
	}
	
	[Column(Storage="_S52Direction", DbType="VarChar(50)")]
	public string S52Direction
	{
		get
		{
			return this._S52Direction;
		}
		set
		{
			if ((this._S52Direction != value))
			{
				this.OnS52DirectionChanging(value);
				this.SendPropertyChanging();
				this._S52Direction = value;
				this.SendPropertyChanged("S52Direction");
				this.OnS52DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_Sother", DbType="Float")]
	public System.Nullable<double> Sother
	{
		get
		{
			return this._Sother;
		}
		set
		{
			if ((this._Sother != value))
			{
				this.OnSotherChanging(value);
				this.SendPropertyChanging();
				this._Sother = value;
				this.SendPropertyChanged("Sother");
				this.OnSotherChanged();
			}
		}
	}
	
	[Column(Storage="_SotherDirection", DbType="VarChar(50)")]
	public string SotherDirection
	{
		get
		{
			return this._SotherDirection;
		}
		set
		{
			if ((this._SotherDirection != value))
			{
				this.OnSotherDirectionChanging(value);
				this.SendPropertyChanging();
				this._SotherDirection = value;
				this.SendPropertyChanged("SotherDirection");
				this.OnSotherDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_P00", DbType="Float")]
	public System.Nullable<double> P00
	{
		get
		{
			return this._P00;
		}
		set
		{
			if ((this._P00 != value))
			{
				this.OnP00Changing(value);
				this.SendPropertyChanging();
				this._P00 = value;
				this.SendPropertyChanged("P00");
				this.OnP00Changed();
			}
		}
	}
	
	[Column(Storage="_P00Direction", DbType="VarChar(50)")]
	public string P00Direction
	{
		get
		{
			return this._P00Direction;
		}
		set
		{
			if ((this._P00Direction != value))
			{
				this.OnP00DirectionChanging(value);
				this.SendPropertyChanging();
				this._P00Direction = value;
				this.SendPropertyChanged("P00Direction");
				this.OnP00DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_P11", DbType="Float")]
	public System.Nullable<double> P11
	{
		get
		{
			return this._P11;
		}
		set
		{
			if ((this._P11 != value))
			{
				this.OnP11Changing(value);
				this.SendPropertyChanging();
				this._P11 = value;
				this.SendPropertyChanged("P11");
				this.OnP11Changed();
			}
		}
	}
	
	[Column(Storage="_P11Direction", DbType="VarChar(50)")]
	public string P11Direction
	{
		get
		{
			return this._P11Direction;
		}
		set
		{
			if ((this._P11Direction != value))
			{
				this.OnP11DirectionChanging(value);
				this.SendPropertyChanging();
				this._P11Direction = value;
				this.SendPropertyChanged("P11Direction");
				this.OnP11DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_P22", DbType="Float")]
	public System.Nullable<double> P22
	{
		get
		{
			return this._P22;
		}
		set
		{
			if ((this._P22 != value))
			{
				this.OnP22Changing(value);
				this.SendPropertyChanging();
				this._P22 = value;
				this.SendPropertyChanged("P22");
				this.OnP22Changed();
			}
		}
	}
	
	[Column(Storage="_P22Direction", DbType="VarChar(50)")]
	public string P22Direction
	{
		get
		{
			return this._P22Direction;
		}
		set
		{
			if ((this._P22Direction != value))
			{
				this.OnP22DirectionChanging(value);
				this.SendPropertyChanging();
				this._P22Direction = value;
				this.SendPropertyChanged("P22Direction");
				this.OnP22DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_P33", DbType="Float")]
	public System.Nullable<double> P33
	{
		get
		{
			return this._P33;
		}
		set
		{
			if ((this._P33 != value))
			{
				this.OnP33Changing(value);
				this.SendPropertyChanging();
				this._P33 = value;
				this.SendPropertyChanged("P33");
				this.OnP33Changed();
			}
		}
	}
	
	[Column(Storage="_P33Direction", DbType="VarChar(50)")]
	public string P33Direction
	{
		get
		{
			return this._P33Direction;
		}
		set
		{
			if ((this._P33Direction != value))
			{
				this.OnP33DirectionChanging(value);
				this.SendPropertyChanging();
				this._P33Direction = value;
				this.SendPropertyChanged("P33Direction");
				this.OnP33DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_Pother", DbType="Float")]
	public System.Nullable<double> Pother
	{
		get
		{
			return this._Pother;
		}
		set
		{
			if ((this._Pother != value))
			{
				this.OnPotherChanging(value);
				this.SendPropertyChanging();
				this._Pother = value;
				this.SendPropertyChanged("Pother");
				this.OnPotherChanged();
			}
		}
	}
	
	[Column(Storage="_PotherDirection", DbType="VarChar(50)")]
	public string PotherDirection
	{
		get
		{
			return this._PotherDirection;
		}
		set
		{
			if ((this._PotherDirection != value))
			{
				this.OnPotherDirectionChanging(value);
				this.SendPropertyChanging();
				this._PotherDirection = value;
				this.SendPropertyChanged("PotherDirection");
				this.OnPotherDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F01", DbType="Float")]
	public System.Nullable<double> F01
	{
		get
		{
			return this._F01;
		}
		set
		{
			if ((this._F01 != value))
			{
				this.OnF01Changing(value);
				this.SendPropertyChanging();
				this._F01 = value;
				this.SendPropertyChanged("F01");
				this.OnF01Changed();
			}
		}
	}
	
	[Column(Storage="_F01Direction", DbType="VarChar(50)")]
	public string F01Direction
	{
		get
		{
			return this._F01Direction;
		}
		set
		{
			if ((this._F01Direction != value))
			{
				this.OnF01DirectionChanging(value);
				this.SendPropertyChanging();
				this._F01Direction = value;
				this.SendPropertyChanged("F01Direction");
				this.OnF01DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F02", DbType="Float")]
	public System.Nullable<double> F02
	{
		get
		{
			return this._F02;
		}
		set
		{
			if ((this._F02 != value))
			{
				this.OnF02Changing(value);
				this.SendPropertyChanging();
				this._F02 = value;
				this.SendPropertyChanged("F02");
				this.OnF02Changed();
			}
		}
	}
	
	[Column(Storage="_F02Direction", DbType="VarChar(50)")]
	public string F02Direction
	{
		get
		{
			return this._F02Direction;
		}
		set
		{
			if ((this._F02Direction != value))
			{
				this.OnF02DirectionChanging(value);
				this.SendPropertyChanging();
				this._F02Direction = value;
				this.SendPropertyChanged("F02Direction");
				this.OnF02DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F12", DbType="Float")]
	public System.Nullable<double> F12
	{
		get
		{
			return this._F12;
		}
		set
		{
			if ((this._F12 != value))
			{
				this.OnF12Changing(value);
				this.SendPropertyChanging();
				this._F12 = value;
				this.SendPropertyChanged("F12");
				this.OnF12Changed();
			}
		}
	}
	
	[Column(Storage="_F12Direction", DbType="VarChar(50)")]
	public string F12Direction
	{
		get
		{
			return this._F12Direction;
		}
		set
		{
			if ((this._F12Direction != value))
			{
				this.OnF12DirectionChanging(value);
				this.SendPropertyChanging();
				this._F12Direction = value;
				this.SendPropertyChanged("F12Direction");
				this.OnF12DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F03", DbType="Float")]
	public System.Nullable<double> F03
	{
		get
		{
			return this._F03;
		}
		set
		{
			if ((this._F03 != value))
			{
				this.OnF03Changing(value);
				this.SendPropertyChanging();
				this._F03 = value;
				this.SendPropertyChanged("F03");
				this.OnF03Changed();
			}
		}
	}
	
	[Column(Storage="_F03Direction", DbType="VarChar(50)")]
	public string F03Direction
	{
		get
		{
			return this._F03Direction;
		}
		set
		{
			if ((this._F03Direction != value))
			{
				this.OnF03DirectionChanging(value);
				this.SendPropertyChanging();
				this._F03Direction = value;
				this.SendPropertyChanged("F03Direction");
				this.OnF03DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F13", DbType="Float")]
	public System.Nullable<double> F13
	{
		get
		{
			return this._F13;
		}
		set
		{
			if ((this._F13 != value))
			{
				this.OnF13Changing(value);
				this.SendPropertyChanging();
				this._F13 = value;
				this.SendPropertyChanged("F13");
				this.OnF13Changed();
			}
		}
	}
	
	[Column(Storage="_F13Direction", DbType="VarChar(50)")]
	public string F13Direction
	{
		get
		{
			return this._F13Direction;
		}
		set
		{
			if ((this._F13Direction != value))
			{
				this.OnF13DirectionChanging(value);
				this.SendPropertyChanging();
				this._F13Direction = value;
				this.SendPropertyChanged("F13Direction");
				this.OnF13DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F23", DbType="Float")]
	public System.Nullable<double> F23
	{
		get
		{
			return this._F23;
		}
		set
		{
			if ((this._F23 != value))
			{
				this.OnF23Changing(value);
				this.SendPropertyChanging();
				this._F23 = value;
				this.SendPropertyChanged("F23");
				this.OnF23Changed();
			}
		}
	}
	
	[Column(Storage="_F23Direction", DbType="VarChar(50)")]
	public string F23Direction
	{
		get
		{
			return this._F23Direction;
		}
		set
		{
			if ((this._F23Direction != value))
			{
				this.OnF23DirectionChanging(value);
				this.SendPropertyChanging();
				this._F23Direction = value;
				this.SendPropertyChanged("F23Direction");
				this.OnF23DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F04", DbType="Float")]
	public System.Nullable<double> F04
	{
		get
		{
			return this._F04;
		}
		set
		{
			if ((this._F04 != value))
			{
				this.OnF04Changing(value);
				this.SendPropertyChanging();
				this._F04 = value;
				this.SendPropertyChanged("F04");
				this.OnF04Changed();
			}
		}
	}
	
	[Column(Storage="_F04Direction", DbType="VarChar(50)")]
	public string F04Direction
	{
		get
		{
			return this._F04Direction;
		}
		set
		{
			if ((this._F04Direction != value))
			{
				this.OnF04DirectionChanging(value);
				this.SendPropertyChanging();
				this._F04Direction = value;
				this.SendPropertyChanged("F04Direction");
				this.OnF04DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F14", DbType="Float")]
	public System.Nullable<double> F14
	{
		get
		{
			return this._F14;
		}
		set
		{
			if ((this._F14 != value))
			{
				this.OnF14Changing(value);
				this.SendPropertyChanging();
				this._F14 = value;
				this.SendPropertyChanged("F14");
				this.OnF14Changed();
			}
		}
	}
	
	[Column(Storage="_F14Direction", DbType="VarChar(50)")]
	public string F14Direction
	{
		get
		{
			return this._F14Direction;
		}
		set
		{
			if ((this._F14Direction != value))
			{
				this.OnF14DirectionChanging(value);
				this.SendPropertyChanging();
				this._F14Direction = value;
				this.SendPropertyChanged("F14Direction");
				this.OnF14DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F24", DbType="Float")]
	public System.Nullable<double> F24
	{
		get
		{
			return this._F24;
		}
		set
		{
			if ((this._F24 != value))
			{
				this.OnF24Changing(value);
				this.SendPropertyChanging();
				this._F24 = value;
				this.SendPropertyChanged("F24");
				this.OnF24Changed();
			}
		}
	}
	
	[Column(Storage="_F24Direction", DbType="VarChar(50)")]
	public string F24Direction
	{
		get
		{
			return this._F24Direction;
		}
		set
		{
			if ((this._F24Direction != value))
			{
				this.OnF24DirectionChanging(value);
				this.SendPropertyChanging();
				this._F24Direction = value;
				this.SendPropertyChanged("F24Direction");
				this.OnF24DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F05", DbType="Float")]
	public System.Nullable<double> F05
	{
		get
		{
			return this._F05;
		}
		set
		{
			if ((this._F05 != value))
			{
				this.OnF05Changing(value);
				this.SendPropertyChanging();
				this._F05 = value;
				this.SendPropertyChanged("F05");
				this.OnF05Changed();
			}
		}
	}
	
	[Column(Storage="_F05Direction", DbType="VarChar(50)")]
	public string F05Direction
	{
		get
		{
			return this._F05Direction;
		}
		set
		{
			if ((this._F05Direction != value))
			{
				this.OnF05DirectionChanging(value);
				this.SendPropertyChanging();
				this._F05Direction = value;
				this.SendPropertyChanged("F05Direction");
				this.OnF05DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F15", DbType="Float")]
	public System.Nullable<double> F15
	{
		get
		{
			return this._F15;
		}
		set
		{
			if ((this._F15 != value))
			{
				this.OnF15Changing(value);
				this.SendPropertyChanging();
				this._F15 = value;
				this.SendPropertyChanged("F15");
				this.OnF15Changed();
			}
		}
	}
	
	[Column(Storage="_F15Direction", DbType="VarChar(50)")]
	public string F15Direction
	{
		get
		{
			return this._F15Direction;
		}
		set
		{
			if ((this._F15Direction != value))
			{
				this.OnF15DirectionChanging(value);
				this.SendPropertyChanging();
				this._F15Direction = value;
				this.SendPropertyChanged("F15Direction");
				this.OnF15DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_F25", DbType="Float")]
	public System.Nullable<double> F25
	{
		get
		{
			return this._F25;
		}
		set
		{
			if ((this._F25 != value))
			{
				this.OnF25Changing(value);
				this.SendPropertyChanging();
				this._F25 = value;
				this.SendPropertyChanged("F25");
				this.OnF25Changed();
			}
		}
	}
	
	[Column(Storage="_F25Direction", DbType="VarChar(50)")]
	public string F25Direction
	{
		get
		{
			return this._F25Direction;
		}
		set
		{
			if ((this._F25Direction != value))
			{
				this.OnF25DirectionChanging(value);
				this.SendPropertyChanging();
				this._F25Direction = value;
				this.SendPropertyChanged("F25Direction");
				this.OnF25DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_Fother", DbType="Float")]
	public System.Nullable<double> Fother
	{
		get
		{
			return this._Fother;
		}
		set
		{
			if ((this._Fother != value))
			{
				this.OnFotherChanging(value);
				this.SendPropertyChanging();
				this._Fother = value;
				this.SendPropertyChanged("Fother");
				this.OnFotherChanged();
			}
		}
	}
	
	[Column(Storage="_FotherDirection", DbType="VarChar(50)")]
	public string FotherDirection
	{
		get
		{
			return this._FotherDirection;
		}
		set
		{
			if ((this._FotherDirection != value))
			{
				this.OnFotherDirectionChanging(value);
				this.SendPropertyChanging();
				this._FotherDirection = value;
				this.SendPropertyChanged("FotherDirection");
				this.OnFotherDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In0", DbType="Float")]
	public System.Nullable<double> In0
	{
		get
		{
			return this._In0;
		}
		set
		{
			if ((this._In0 != value))
			{
				this.OnIn0Changing(value);
				this.SendPropertyChanging();
				this._In0 = value;
				this.SendPropertyChanged("In0");
				this.OnIn0Changed();
			}
		}
	}
	
	[Column(Storage="_In0Direction", DbType="VarChar(50)")]
	public string In0Direction
	{
		get
		{
			return this._In0Direction;
		}
		set
		{
			if ((this._In0Direction != value))
			{
				this.OnIn0DirectionChanging(value);
				this.SendPropertyChanging();
				this._In0Direction = value;
				this.SendPropertyChanged("In0Direction");
				this.OnIn0DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In1", DbType="Float")]
	public System.Nullable<double> In1
	{
		get
		{
			return this._In1;
		}
		set
		{
			if ((this._In1 != value))
			{
				this.OnIn1Changing(value);
				this.SendPropertyChanging();
				this._In1 = value;
				this.SendPropertyChanged("In1");
				this.OnIn1Changed();
			}
		}
	}
	
	[Column(Storage="_In1Direction", DbType="VarChar(50)")]
	public string In1Direction
	{
		get
		{
			return this._In1Direction;
		}
		set
		{
			if ((this._In1Direction != value))
			{
				this.OnIn1DirectionChanging(value);
				this.SendPropertyChanging();
				this._In1Direction = value;
				this.SendPropertyChanged("In1Direction");
				this.OnIn1DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In2", DbType="Float")]
	public System.Nullable<double> In2
	{
		get
		{
			return this._In2;
		}
		set
		{
			if ((this._In2 != value))
			{
				this.OnIn2Changing(value);
				this.SendPropertyChanging();
				this._In2 = value;
				this.SendPropertyChanged("In2");
				this.OnIn2Changed();
			}
		}
	}
	
	[Column(Storage="_In2Direction", DbType="VarChar(50)")]
	public string In2Direction
	{
		get
		{
			return this._In2Direction;
		}
		set
		{
			if ((this._In2Direction != value))
			{
				this.OnIn2DirectionChanging(value);
				this.SendPropertyChanging();
				this._In2Direction = value;
				this.SendPropertyChanged("In2Direction");
				this.OnIn2DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In3", DbType="Float")]
	public System.Nullable<double> In3
	{
		get
		{
			return this._In3;
		}
		set
		{
			if ((this._In3 != value))
			{
				this.OnIn3Changing(value);
				this.SendPropertyChanging();
				this._In3 = value;
				this.SendPropertyChanged("In3");
				this.OnIn3Changed();
			}
		}
	}
	
	[Column(Storage="_In3Direction", DbType="VarChar(50)")]
	public string In3Direction
	{
		get
		{
			return this._In3Direction;
		}
		set
		{
			if ((this._In3Direction != value))
			{
				this.OnIn3DirectionChanging(value);
				this.SendPropertyChanging();
				this._In3Direction = value;
				this.SendPropertyChanged("In3Direction");
				this.OnIn3DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In4", DbType="Float")]
	public System.Nullable<double> In4
	{
		get
		{
			return this._In4;
		}
		set
		{
			if ((this._In4 != value))
			{
				this.OnIn4Changing(value);
				this.SendPropertyChanging();
				this._In4 = value;
				this.SendPropertyChanged("In4");
				this.OnIn4Changed();
			}
		}
	}
	
	[Column(Storage="_In4Direction", DbType="VarChar(50)")]
	public string In4Direction
	{
		get
		{
			return this._In4Direction;
		}
		set
		{
			if ((this._In4Direction != value))
			{
				this.OnIn4DirectionChanging(value);
				this.SendPropertyChanging();
				this._In4Direction = value;
				this.SendPropertyChanged("In4Direction");
				this.OnIn4DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In5", DbType="Float")]
	public System.Nullable<double> In5
	{
		get
		{
			return this._In5;
		}
		set
		{
			if ((this._In5 != value))
			{
				this.OnIn5Changing(value);
				this.SendPropertyChanging();
				this._In5 = value;
				this.SendPropertyChanged("In5");
				this.OnIn5Changed();
			}
		}
	}
	
	[Column(Storage="_In5Direction", DbType="VarChar(50)")]
	public string In5Direction
	{
		get
		{
			return this._In5Direction;
		}
		set
		{
			if ((this._In5Direction != value))
			{
				this.OnIn5DirectionChanging(value);
				this.SendPropertyChanging();
				this._In5Direction = value;
				this.SendPropertyChanged("In5Direction");
				this.OnIn5DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In6", DbType="Float")]
	public System.Nullable<double> In6
	{
		get
		{
			return this._In6;
		}
		set
		{
			if ((this._In6 != value))
			{
				this.OnIn6Changing(value);
				this.SendPropertyChanging();
				this._In6 = value;
				this.SendPropertyChanged("In6");
				this.OnIn6Changed();
			}
		}
	}
	
	[Column(Storage="_In6Direction", DbType="VarChar(50)")]
	public string In6Direction
	{
		get
		{
			return this._In6Direction;
		}
		set
		{
			if ((this._In6Direction != value))
			{
				this.OnIn6DirectionChanging(value);
				this.SendPropertyChanging();
				this._In6Direction = value;
				this.SendPropertyChanged("In6Direction");
				this.OnIn6DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_In7", DbType="Float")]
	public System.Nullable<double> In7
	{
		get
		{
			return this._In7;
		}
		set
		{
			if ((this._In7 != value))
			{
				this.OnIn7Changing(value);
				this.SendPropertyChanging();
				this._In7 = value;
				this.SendPropertyChanged("In7");
				this.OnIn7Changed();
			}
		}
	}
	
	[Column(Storage="_In7Direction", DbType="VarChar(50)")]
	public string In7Direction
	{
		get
		{
			return this._In7Direction;
		}
		set
		{
			if ((this._In7Direction != value))
			{
				this.OnIn7DirectionChanging(value);
				this.SendPropertyChanging();
				this._In7Direction = value;
				this.SendPropertyChanged("In7Direction");
				this.OnIn7DirectionChanged();
			}
		}
	}
	
	[Column(Storage="_SS", DbType="Float")]
	public System.Nullable<double> SS
	{
		get
		{
			return this._SS;
		}
		set
		{
			if ((this._SS != value))
			{
				this.OnSSChanging(value);
				this.SendPropertyChanging();
				this._SS = value;
				this.SendPropertyChanged("SS");
				this.OnSSChanged();
			}
		}
	}
	
	[Column(Storage="_SSDirection", DbType="VarChar(50)")]
	public string SSDirection
	{
		get
		{
			return this._SSDirection;
		}
		set
		{
			if ((this._SSDirection != value))
			{
				this.OnSSDirectionChanging(value);
				this.SendPropertyChanging();
				this._SSDirection = value;
				this.SendPropertyChanged("SSDirection");
				this.OnSSDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_SP", DbType="Float")]
	public System.Nullable<double> SP
	{
		get
		{
			return this._SP;
		}
		set
		{
			if ((this._SP != value))
			{
				this.OnSPChanging(value);
				this.SendPropertyChanging();
				this._SP = value;
				this.SendPropertyChanged("SP");
				this.OnSPChanged();
			}
		}
	}
	
	[Column(Storage="_SPDirection", DbType="VarChar(50)")]
	public string SPDirection
	{
		get
		{
			return this._SPDirection;
		}
		set
		{
			if ((this._SPDirection != value))
			{
				this.OnSPDirectionChanging(value);
				this.SendPropertyChanging();
				this._SPDirection = value;
				this.SendPropertyChanged("SPDirection");
				this.OnSPDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_SF", DbType="Float")]
	public System.Nullable<double> SF
	{
		get
		{
			return this._SF;
		}
		set
		{
			if ((this._SF != value))
			{
				this.OnSFChanging(value);
				this.SendPropertyChanging();
				this._SF = value;
				this.SendPropertyChanged("SF");
				this.OnSFChanged();
			}
		}
	}
	
	[Column(Storage="_SFDirection", DbType="VarChar(50)")]
	public string SFDirection
	{
		get
		{
			return this._SFDirection;
		}
		set
		{
			if ((this._SFDirection != value))
			{
				this.OnSFDirectionChanging(value);
				this.SendPropertyChanging();
				this._SFDirection = value;
				this.SendPropertyChanged("SFDirection");
				this.OnSFDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_PS", DbType="Float")]
	public System.Nullable<double> PS
	{
		get
		{
			return this._PS;
		}
		set
		{
			if ((this._PS != value))
			{
				this.OnPSChanging(value);
				this.SendPropertyChanging();
				this._PS = value;
				this.SendPropertyChanged("PS");
				this.OnPSChanged();
			}
		}
	}
	
	[Column(Storage="_PSDirection", DbType="VarChar(50)")]
	public string PSDirection
	{
		get
		{
			return this._PSDirection;
		}
		set
		{
			if ((this._PSDirection != value))
			{
				this.OnPSDirectionChanging(value);
				this.SendPropertyChanging();
				this._PSDirection = value;
				this.SendPropertyChanged("PSDirection");
				this.OnPSDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_PP", DbType="Float")]
	public System.Nullable<double> PP
	{
		get
		{
			return this._PP;
		}
		set
		{
			if ((this._PP != value))
			{
				this.OnPPChanging(value);
				this.SendPropertyChanging();
				this._PP = value;
				this.SendPropertyChanged("PP");
				this.OnPPChanged();
			}
		}
	}
	
	[Column(Storage="_PPDirection", DbType="VarChar(50)")]
	public string PPDirection
	{
		get
		{
			return this._PPDirection;
		}
		set
		{
			if ((this._PPDirection != value))
			{
				this.OnPPDirectionChanging(value);
				this.SendPropertyChanging();
				this._PPDirection = value;
				this.SendPropertyChanged("PPDirection");
				this.OnPPDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_PF", DbType="Float")]
	public System.Nullable<double> PF
	{
		get
		{
			return this._PF;
		}
		set
		{
			if ((this._PF != value))
			{
				this.OnPFChanging(value);
				this.SendPropertyChanging();
				this._PF = value;
				this.SendPropertyChanged("PF");
				this.OnPFChanged();
			}
		}
	}
	
	[Column(Storage="_PFDirection", DbType="VarChar(50)")]
	public string PFDirection
	{
		get
		{
			return this._PFDirection;
		}
		set
		{
			if ((this._PFDirection != value))
			{
				this.OnPFDirectionChanging(value);
				this.SendPropertyChanging();
				this._PFDirection = value;
				this.SendPropertyChanged("PFDirection");
				this.OnPFDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_FS", DbType="Float")]
	public System.Nullable<double> FS
	{
		get
		{
			return this._FS;
		}
		set
		{
			if ((this._FS != value))
			{
				this.OnFSChanging(value);
				this.SendPropertyChanging();
				this._FS = value;
				this.SendPropertyChanged("FS");
				this.OnFSChanged();
			}
		}
	}
	
	[Column(Storage="_FSDirection", DbType="VarChar(50)")]
	public string FSDirection
	{
		get
		{
			return this._FSDirection;
		}
		set
		{
			if ((this._FSDirection != value))
			{
				this.OnFSDirectionChanging(value);
				this.SendPropertyChanging();
				this._FSDirection = value;
				this.SendPropertyChanged("FSDirection");
				this.OnFSDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_FP", DbType="Float")]
	public System.Nullable<double> FP
	{
		get
		{
			return this._FP;
		}
		set
		{
			if ((this._FP != value))
			{
				this.OnFPChanging(value);
				this.SendPropertyChanging();
				this._FP = value;
				this.SendPropertyChanged("FP");
				this.OnFPChanged();
			}
		}
	}
	
	[Column(Storage="_FPDirection", DbType="VarChar(50)")]
	public string FPDirection
	{
		get
		{
			return this._FPDirection;
		}
		set
		{
			if ((this._FPDirection != value))
			{
				this.OnFPDirectionChanging(value);
				this.SendPropertyChanging();
				this._FPDirection = value;
				this.SendPropertyChanged("FPDirection");
				this.OnFPDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_FF", DbType="Float")]
	public System.Nullable<double> FF
	{
		get
		{
			return this._FF;
		}
		set
		{
			if ((this._FF != value))
			{
				this.OnFFChanging(value);
				this.SendPropertyChanging();
				this._FF = value;
				this.SendPropertyChanged("FF");
				this.OnFFChanged();
			}
		}
	}
	
	[Column(Storage="_FFDirection", DbType="VarChar(50)")]
	public string FFDirection
	{
		get
		{
			return this._FFDirection;
		}
		set
		{
			if ((this._FFDirection != value))
			{
				this.OnFFDirectionChanging(value);
				this.SendPropertyChanging();
				this._FFDirection = value;
				this.SendPropertyChanged("FFDirection");
				this.OnFFDirectionChanged();
			}
		}
	}
	
	[Column(Storage="_MainLoseball", DbType="Int")]
	public System.Nullable<int> MainLoseball
	{
		get
		{
			return this._MainLoseball;
		}
		set
		{
			if ((this._MainLoseball != value))
			{
				this.OnMainLoseballChanging(value);
				this.SendPropertyChanging();
				this._MainLoseball = value;
				this.SendPropertyChanged("MainLoseball");
				this.OnMainLoseballChanged();
			}
		}
	}
	
	[Column(Storage="_StopSellTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> StopSellTime
	{
		get
		{
			return this._StopSellTime;
		}
		set
		{
			if ((this._StopSellTime != value))
			{
				this.OnStopSellTimeChanging(value);
				this.SendPropertyChanging();
				this._StopSellTime = value;
				this.SendPropertyChanged("StopSellTime");
				this.OnStopSellTimeChanged();
			}
		}
	}
	
	[Column(Storage="_EuropeSSP", DbType="VarChar(50)")]
	public string EuropeSSP
	{
		get
		{
			return this._EuropeSSP;
		}
		set
		{
			if ((this._EuropeSSP != value))
			{
				this.OnEuropeSSPChanging(value);
				this.SendPropertyChanging();
				this._EuropeSSP = value;
				this.SendPropertyChanged("EuropeSSP");
				this.OnEuropeSSPChanged();
			}
		}
	}
	
	[Column(Storage="_EuropePSP", DbType="VarChar(50)")]
	public string EuropePSP
	{
		get
		{
			return this._EuropePSP;
		}
		set
		{
			if ((this._EuropePSP != value))
			{
				this.OnEuropePSPChanging(value);
				this.SendPropertyChanging();
				this._EuropePSP = value;
				this.SendPropertyChanged("EuropePSP");
				this.OnEuropePSPChanged();
			}
		}
	}
	
	[Column(Storage="_EuropeFSP", DbType="VarChar(50)")]
	public string EuropeFSP
	{
		get
		{
			return this._EuropeFSP;
		}
		set
		{
			if ((this._EuropeFSP != value))
			{
				this.OnEuropeFSPChanging(value);
				this.SendPropertyChanging();
				this._EuropeFSP = value;
				this.SendPropertyChanged("EuropeFSP");
				this.OnEuropeFSPChanged();
			}
		}
	}
	
	[Column(Storage="_InforMationID", DbType="BigInt")]
	public System.Nullable<long> InforMationID
	{
		get
		{
			return this._InforMationID;
		}
		set
		{
			if ((this._InforMationID != value))
			{
				this.OnInforMationIDChanging(value);
				this.SendPropertyChanging();
				this._InforMationID = value;
				this.SendPropertyChanged("InforMationID");
				this.OnInforMationIDChanged();
			}
		}
	}
	
	[Column(Storage="_InforMationMainTeamID", DbType="BigInt")]
	public System.Nullable<long> InforMationMainTeamID
	{
		get
		{
			return this._InforMationMainTeamID;
		}
		set
		{
			if ((this._InforMationMainTeamID != value))
			{
				this.OnInforMationMainTeamIDChanging(value);
				this.SendPropertyChanging();
				this._InforMationMainTeamID = value;
				this.SendPropertyChanged("InforMationMainTeamID");
				this.OnInforMationMainTeamIDChanged();
			}
		}
	}
	
	[Column(Storage="_InforMationGuestTeamID", DbType="BigInt")]
	public System.Nullable<long> InforMationGuestTeamID
	{
		get
		{
			return this._InforMationGuestTeamID;
		}
		set
		{
			if ((this._InforMationGuestTeamID != value))
			{
				this.OnInforMationGuestTeamIDChanging(value);
				this.SendPropertyChanging();
				this._InforMationGuestTeamID = value;
				this.SendPropertyChanged("InforMationGuestTeamID");
				this.OnInforMationGuestTeamIDChanged();
			}
		}
	}
	
	[Column(Storage="_InforMationMatchTypeID", DbType="BigInt")]
	public System.Nullable<long> InforMationMatchTypeID
	{
		get
		{
			return this._InforMationMatchTypeID;
		}
		set
		{
			if ((this._InforMationMatchTypeID != value))
			{
				this.OnInforMationMatchTypeIDChanging(value);
				this.SendPropertyChanging();
				this._InforMationMatchTypeID = value;
				this.SendPropertyChanged("InforMationMatchTypeID");
				this.OnInforMationMatchTypeIDChanged();
			}
		}
	}
	
	[Column(Storage="_GameColor", DbType="VarChar(50)")]
	public string GameColor
	{
		get
		{
			return this._GameColor;
		}
		set
		{
			if ((this._GameColor != value))
			{
				this.OnGameColorChanging(value);
				this.SendPropertyChanging();
				this._GameColor = value;
				this.SendPropertyChanged("GameColor");
				this.OnGameColorChanged();
			}
		}
	}
	
	[Column(Storage="_SNumberCount", DbType="Int")]
	public System.Nullable<int> SNumberCount
	{
		get
		{
			return this._SNumberCount;
		}
		set
		{
			if ((this._SNumberCount != value))
			{
				this.OnSNumberCountChanging(value);
				this.SendPropertyChanging();
				this._SNumberCount = value;
				this.SendPropertyChanged("SNumberCount");
				this.OnSNumberCountChanged();
			}
		}
	}
	
	[Column(Storage="_PNumberCount", DbType="Int")]
	public System.Nullable<int> PNumberCount
	{
		get
		{
			return this._PNumberCount;
		}
		set
		{
			if ((this._PNumberCount != value))
			{
				this.OnPNumberCountChanging(value);
				this.SendPropertyChanging();
				this._PNumberCount = value;
				this.SendPropertyChanged("PNumberCount");
				this.OnPNumberCountChanged();
			}
		}
	}
	
	[Column(Storage="_FNumberCount", DbType="Int")]
	public System.Nullable<int> FNumberCount
	{
		get
		{
			return this._FNumberCount;
		}
		set
		{
			if ((this._FNumberCount != value))
			{
				this.OnFNumberCountChanging(value);
				this.SendPropertyChanging();
				this._FNumberCount = value;
				this.SendPropertyChanged("FNumberCount");
				this.OnFNumberCountChanged();
			}
		}
	}
	
	[Column(Storage="_IsHhad", DbType="Bit")]
	public System.Nullable<bool> IsHhad
	{
		get
		{
			return this._IsHhad;
		}
		set
		{
			if ((this._IsHhad != value))
			{
				this.OnIsHhadChanging(value);
				this.SendPropertyChanging();
				this._IsHhad = value;
				this.SendPropertyChanged("IsHhad");
				this.OnIsHhadChanged();
			}
		}
	}
	
	[Column(Storage="_IsCrs", DbType="Bit")]
	public System.Nullable<bool> IsCrs
	{
		get
		{
			return this._IsCrs;
		}
		set
		{
			if ((this._IsCrs != value))
			{
				this.OnIsCrsChanging(value);
				this.SendPropertyChanging();
				this._IsCrs = value;
				this.SendPropertyChanged("IsCrs");
				this.OnIsCrsChanged();
			}
		}
	}
	
	[Column(Storage="_IsTtg", DbType="Bit")]
	public System.Nullable<bool> IsTtg
	{
		get
		{
			return this._IsTtg;
		}
		set
		{
			if ((this._IsTtg != value))
			{
				this.OnIsTtgChanging(value);
				this.SendPropertyChanging();
				this._IsTtg = value;
				this.SendPropertyChanged("IsTtg");
				this.OnIsTtgChanged();
			}
		}
	}
	
	[Column(Storage="_IsHafu", DbType="Bit")]
	public System.Nullable<bool> IsHafu
	{
		get
		{
			return this._IsHafu;
		}
		set
		{
			if ((this._IsHafu != value))
			{
				this.OnIsHafuChanging(value);
				this.SendPropertyChanging();
				this._IsHafu = value;
				this.SendPropertyChanged("IsHafu");
				this.OnIsHafuChanged();
			}
		}
	}
	
	[Column(Storage="_State", DbType="Bit")]
	public System.Nullable<bool> State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
